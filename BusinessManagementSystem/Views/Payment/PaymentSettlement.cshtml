<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">
                    <h3>Payments & Tips Settlement</h3>
                </div>
            </div>
            <div class="card-body">
                <partial name="_DateRangeFilter" />
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="tblPaymentSettlement" style="width:100%; font-size:13px">
                        <thead class="table-header">
                            <tr>
                                <th>UserId</th>
                                <th>AppointmentId</th>
                                <th>AppointmentDate</th>
@*                                 <th>Payment Updated Date</th> *@
                                <th>ClientName</th>
                                <th>ArtistName</th>
                                <th>PaymentMethod</th>
                                <th>TotalCost</th>
                                <th>PaymentToStudio</th>
                                <th>PaymentToArtist</th>
                                <th>Status</th>
                                <th>PaymentSettlement</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th colspan="6" style="text-align:right">Total:</th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th colspan="2"></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="tblTipSettlement" style="width:100%; font-size:13px">
                        <thead class="table-header">
                            <tr>
                                <th>Appointment ID</th>
                                <th>Appointment Date</th>
                                <th>Tip Created Date</th>
                                <th>Client Name</th>
                                <th>Artist Name</th>
                                <th>Tip Assigned User</th>
                                <th>Tip Amount</th>
                                <th>Tip Amount for User</th>
                                <th>Status</th>
                                <th>Tip Settlement</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th colspan="6" style="text-align:right">Total:</th>
                                <th></th>
                                <th></th>
                                <th colspan="2"></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-4">
                        <table class="table table-bordered table-sm">
                            <tbody>
                                <tr>
                                    <td>Total Payment To Artist: </td>
                                    <td>Rs. <span id="totalPayment"></span></td>
                                </tr>
                                <tr>
                                    <td>Total Tips To Artist: </td>
                                    <td>Rs. <span id="totalTip"></span></td>
                                </tr>
                                <tr>
                                    <td><b>Grand Total: </b></td>
                                    <td><b>Rs. <span id="grandTotal"></span></b></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                @if (User.IsInRole("superadmin"))
                {
                    <div class="row">
                        <input type="submit" id="btnInitiatePayment" value="Initiate Payment" class="btn btn-success" style="margin-top:30px" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let datatablePayment = null;
        let datatabelTip = null;
        let responsePaymentTipList;
       
        $(document).ready(function () {
            loadDataTable();
            $("#btnFilterLoad").on("click", function (e) {
                e.preventDefault(); // Prevent form submission if the button is inside a form
                loadDataTable();
            });
            $("#btnInitiatePayment").on("click", function (e) {
                updatePaymentTipSettlementInfo();
            });
        });
        function loadDataTable() {
            const requestDto = {
                StartDate: $("#StartDate").val(),
                EndDate: $("#EndDate").val(),
                Status: $("#Status").val(),
                UserId: $("#UserId").val(),
                Settlement: $("#Settlement").val()
            };
            if (datatablePayment) {
                $("#tblPaymentSettlement").DataTable().destroy();
            }
            if (datatabelTip) {
                $("#tblTipSettlement").DataTable().destroy();
            }
            $.ajax({
                url: `/Payment/GetPaymentTipSettlementData`,
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(requestDto),
                success: function (data) {
                    responsePaymentTipList = data.data;
                    datatablePayment = $("#tblPaymentSettlement").DataTable({
                        footerCallback: function (row, data, start, end, display) {
                            var api = this.api();
                            // Helper function to parse numbers safely
                            var intVal = function (i) {
                                return typeof i === 'string'
                                    ? i.replace(/[\$,]/g, '') * 1
                                    : typeof i === 'number'
                                        ? i
                                        : 0;
                            };

                            // Calculate the total for filtered rows (visible rows after search)
                            var totalCost = api
                                .column(6, { search: 'applied' }) // Target the 4th column
                                .data()
                                .reduce(function (a, b) {
                                    return intVal(a) + intVal(b);
                                }, 0);
                            var totalPaymentToStudio = api
                                .column(7, { search: 'applied' }) // Target the 4th column
                                .data()
                                .reduce(function (a, b) {
                                    return intVal(a) + intVal(b);
                                }, 0);
                            var totalPaymentToArtist = api
                                .column(8, { search: 'applied' }) // Target the 4th column
                                .data()
                                .reduce(function (a, b) {
                                    return intVal(a) + intVal(b);
                                }, 0);

                            // Update the footer
                            $(api.column(6).footer()).html(totalCost);
                            $(api.column(7).footer()).html(totalPaymentToStudio);
                            $(api.column(8).footer()).html(totalPaymentToArtist);
                        },
                        fixHeader: {
                            header: true,
                            headerOffset: 50
                        },
                        autoWidth: true,
                        lengthMenu: [[5, 25, -1], [5, 25, "All"]],
                        data: data.data.    paymentSettlements,
                        columns: [
                            { data: 'userId' },
                            { data: 'appointmentId' },
                            { data: 'appointmentDate',
                                render: function (data) {
                                    return formatDate(data);
                                }
                            },
                            { data: 'clientName' },
                            { data: 'artistName' },
                            { data: 'paymentMethod' },
                            { data: 'totalCost' }, 
                            { data: 'paymentToStudio' },
                            { data: 'paymentToArtist' },
                            { data: 'status' },
                            { data: 'paymentSettlement' },
                        ]
                    });
                    datatabelTip = $("#tblTipSettlement").DataTable({
                        footerCallback: function (row, data, start, end, display) {
                            var api = this.api();
                            // Helper function to parse numbers safely
                            var intVal = function (i) {
                                return typeof i === 'string'
                                    ? i.replace(/[\$,]/g, '') * 1
                                    : typeof i === 'number'
                                        ? i
                                        : 0;
                            };

                            // Calculate the total for filtered rows (visible rows after search)
                            var totalTipAmount = api
                                .column(6, { search: 'applied' }) // Target the 4th column
                                .data()
                                .reduce(function (a, b) {
                                    return intVal(a) + intVal(b);
                                }, 0);
                            var totalTipAmountForUser = api
                                .column(7, { search: 'applied' }) // Target the 4th column
                                .data()
                                .reduce(function (a, b) {
                                    return intVal(a) + intVal(b);
                                }, 0);

                            // Update the footer
                            $(api.column(6).footer()).html(totalTipAmount);
                            $(api.column(7).footer()).html(totalTipAmountForUser);
                        },
                        fixHeader: {
                            header: true,
                            headerOffset: 50
                        },
                        autoWidth: true,
                        lengthMenu: [[5, 25, -1], [5, 25, "All"]],
                        data: data.data.tipSettlements,
                        columns: [
                            { data: 'appointmentId' },
                            { data: 'appointmentDate',
                                render: function (data) {
                                    return formatDate(data);
                                }
                            },
                            { data: 'tipCreatedDate',
                                render: function (data) {
                                    return formatDate(data);
                                }
                            },
                            { data: 'clientName' },
                            { data: 'artistName' },
                            { data: 'tipAssignedUser' },
                            { data: 'tipAmount' },
                            { data: 'tipAmountForUser' },
                            { data: 'status' },
                            { data: 'tipSettlement' },
                        ]
                    });
                    $("#totalPayment").text(data.data.totalPayments)
                    $("#totalTip").text(data.data.totalTips)
                    $("#grandTotal").text(data.data.grandTotal)
                }
            });
        }
        function updatePaymentTipSettlementInfo(){
            // let startDate = $("#StartDate").val();
            // let endDate = $("#EndDate").val();
            $.ajax({
                url: `/Payment/UpdatePaymentTipSettlementData`,
                type: 'POST',
                contentType: 'application/json', // Ensure JSON is sent
                data: JSON.stringify(responsePaymentTipList), // Convert object to JSON string
                success: function (data) {
                    if (data == true) {
                        toastr.success('Successfully Updated the Payment and Tip settlement ');
                        loadDataTable();
                    }
                    else
                        toastr.error('Could not Settle Payment and Tip. Please settle per Employee basis');
                }
            });
        }
    </script>
}